# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger: none
pr: none

resources:
  pipelines:
    - pipeline: build
      source: auctions-checkout-microsite-build
      branch: master
      trigger:
        branches:
          include:
            - master

pool:
  vmImage: 'ubuntu-latest'

parameters:
  - name: deployToDev
    type: boolean
    default: false

  - name: mockCI
    type: boolean
    default: false

  - name: skipE2eTests
    type: boolean
    default: true # set to false for e2e tests to run

variables:
  - template: templates/variables.yml
    parameters:
      skipE2eTests: ${{ parameters.skipE2eTests }}

stages:
  - stage: stageDeployDev
    displayName: Dev
    dependsOn: stageBuild
    condition: and(succeeded(), or(eq('true', variables.isCI), eq('true', ${{ parameters.deployToDev }}), eq('true', ${{ parameters.mockCI }}) ))
    jobs:
      - template: templates/deploy.yml
        parameters:
          environmentType: Dev
          serviceConnection: $(azureSubscription)
          slotName: staging
          regions:
            - East

      - template: templates/swapSlot.yml
        parameters:
          environmentType: Dev
          serviceConnection: $(azureSubscription)
          regions:
            - East

  - stage: stageDeployQA
    displayName: QA
    dependsOn: stageDeployDev
    condition: and(succeeded(), or(eq('true', variables.isCI), eq('true', ${{ parameters.mockCI }})))
    jobs:
      - template: templates/deploy.yml
        parameters:
          manualApproval: true
          environmentType: Dev # mocking production environment
          serviceConnection: $(azureSubscription)
          slotName: staging
          regions:
            - East

      - template: templates/swapSlot.yml
        parameters:
          environmentType: Dev # mocking production environment
          serviceConnection: $(azureSubscription)
          regions:
            - East

  - stage: stageDeployStaging
    displayName: Staging Prod
    dependsOn: stageDeployQA
    jobs:
      - template: templates/deploy.yml
        parameters:
          manualApproval: true
          environmentType: Dev # mocking production environment
          serviceConnection: $(azureSubscription)
          slotName: staging
          regions:
            - East

  - stage: stageDeployProd
    displayName: Prod
    dependsOn: stageDeployStaging
    jobs:
      - template: templates/swapSlot.yml
        parameters:
          environmentType: Dev # mocking production environment
          dependsOnDeployJob: false
          serviceConnection: $(azureSubscription)
          regions:
            - East
