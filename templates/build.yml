jobs:
- job: Build
  pool:
    vmImage: ubuntu-latest

  steps:
    - script: env | sort
      displayName: Pipeline Environment

    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
      displayName: Install Node.js

    - task: Cache@2
      displayName: 'Cache npm'
      inputs:
        key: 'npm | "$(Agent.OS)" | package-lock.json'
        restoreKeys: |
          npm | "$(Agent.OS)"
          npm
        path: $(npm_config_cache)

    - task: Cache@2
      displayName: 'Cache Cypress'
      inputs:
        key: 'cypress | $(Agent.OS) | package-lock.json'
        restoreKeys: |
          cypress | $(Agent.OS) | package-lock.json
        path: $(CYPRESS_CACHE_FOLDER)

    - script: npm ci # --cache $(npm_config_cache)
      displayName: Install & Build

    - script: npm run test:cover
      displayName: Unit Tests

    - task: PublishTestResults@2
      displayName: Publish Unit Test
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: 'coverage/jest-junit/junit.xml'

    - task: PublishCodeCoverageResults@1
      displayName: Publish Code Coverage
      condition: succeededOrFailed()
      inputs:
        failIfCoverageEmpty: true
        codeCoverageTool: Cobertura
        summaryFileLocation: $(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml

    - task: PublishHtmlReport@1
      displayName: Publish Unit Test Report
      condition: succeededOrFailed()
      inputs:
        reportDir: 'coverage/html-report.html'
        tabName: Unit Tests

    - task: CopyFiles@2
      displayName: Prepare Artifact
      inputs:
        contents: |
          **/**
          !node_modules/**
          !.git/**
          !.idea/**
          !.storybook/**
          !jest.config.js
          !jest.setup.js
          !lint-staged.config.js
          !prettier.config.js
        targetFolder: $(Build.ArtifactStagingDirectory)

    - task: PublishPipelineArtifact@1
      displayName: Publish Artifact
      inputs:
        targetPath: $(Build.ArtifactStagingDirectory)
        artifactType: 'pipeline'
        artifactName: $(System.DefinitionName)
